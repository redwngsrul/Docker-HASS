- platform: moon

- platform: time_date
  display_options:
    - 'time'
    - 'date'

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: last_boot
    - type: ipv4_address
      arg: eth0
    - type: processor_use

- platform: qnap
  host: redwngsrul.myqnapcloud.com
  port: 50443
  ssl: true
  username: !secret qnap_user
  password: !secret qnap_pw
  monitored_conditions:
    - status
    - cpu_usage
    - memory_percent_used
    - volume_percentage_used

- platform: mqtt
  state_topic: "/Garage/Temp/Temperature"
  name: "Garage Temp"
  unit_of_measurement: "°F"
  qos: 1

# - platform: mqtt
#   state_topic: "zwave/Den/den_multisensor/49/0/Air_temperature"
#   value_template: "{{ value_json.value }}"
#   name: "Den Temp"
#   unit_of_measurement: "°F"
#   qos: 1

# - platform: mqtt
#   state_topic: "zwave/Den/den_multisensor/49/0/Humidity"
#   value_template: "{{ value_json.value }}"
#   name: "Den Humidity"
#   unit_of_measurement: "%"
#   qos: 1

# - platform: mqtt
#   state_topic: "zwave/Den/den_multisensor/49/0/Illuminance"
#   value_template: "{{ value_json.value }}"
#   name: "Den Illuminance"
#   unit_of_measurement: "Lux"
#   qos: 1

# - platform: mqtt
#   state_topic: "zwave/Den/den_multisensor/128/0/level"
#   value_template: "{{ value_json.value }}"
#   name: "Den ZW Battery"
#   unit_of_measurement: "%"
#   qos: 1

# - platform: mqtt
#   state_topic: "zwave/Living_Room/frontdoor_multisensor/49/0/Air_temperature"
#   value_template: "{{ (value_json.value * 1.8) + 32 }}"
#   name: "Front Door Temp"
#   unit_of_measurement: "°F"
#   qos: 1

# - platform: mqtt
#   state_topic: "zwave/Living_Room/frontdoor_multisensor/49/0/Humidity"
#   value_template: "{{ value_json.value }}"
#   name: "Front Door Humidity"
#   unit_of_measurement: "%"
#   qos: 1

# - platform: mqtt
#   state_topic: "zwave/Living_Room/frontdoor_multisensor/49/0/Illuminance"
#   value_template: "{{ value_json.value }}"
#   name: "Front Door Illuminance"
#   unit_of_measurement: "%"
#   qos: 1

# - platform: mqtt
#   state_topic: "zwave/Living_Room/frontdoor_multisensor/128/0/level"
#   value_template: "{{ value_json.value }}"
#   name: "Front Door Multi ZW Battery"
#   unit_of_measurement: "%"
#   qos: 1

# - platform: rest
#   name: Frigate Debug
#   resource: http://192.168.50.243:5000/debug/stats
#   scan_interval: 5
#   json_attributes:
#     - front_yard
#     - detection_fps
#     - detectors
#   value_template: 'OK'

- platform: template
  sensors:
    garage_status:
      friendly_name: 'Garage Status'
      value_template: '{{ states.cover.garage.state }}'
    garage_status_abbr:
      friendly_name: 'Garage'
      value_template: '{% if is_state("sensor.garage_status", "closed") %} CL {% else %} OP {% endif %}'
    nas_uptime:
      friendly_name: 'NAS Run Time'
      value_template: '{{ states.sensor.nasf34bde_status.attributes.Uptime }}'
    weather_temp:
      friendly_name: 'Weather Temp'
      value_template: '{{ state_attr("weather.thermostat","temperature") }}'
    weather_humid:
      friendly_name: 'Weather Humidity'
      value_template: '{{ state_attr("weather.thermostat","humidity") }}'
    # zwave_den_batt:
    #   friendly_name: 'Den Z-Wave Battery'
    #   value_template: "{{ state_attr('zwave.aeon_labs_zw100_multisensor_6','battery_level') }}"
    #   unit_of_measurement: '%'
    # zwave_frontdoormulti_batt:
    #   friendly_name: 'Front Door Multi Z-Wave Battery'
    #   value_template: "{{ state_attr('zwave.vision_security_zp3111_multisensor_4in1','battery_level') }}"
    #   unit_of_measurement: '%'
    # zwave_frontdooropen_batt:
    #   friendly_name: 'Front Door Z-Wave Battery'
    #   value_template: "{{ state_attr('zwave.hank_electronics_ltd_hkzw_dws01_door_window_sensor_2','battery_level') }}"
    #   unit_of_measurement: '%'
    # zwave_backdooropen_batt:
    #   friendly_name: 'Back Door Z-Wave Battery'
    #   value_template: "{{ state_attr('zwave.hank_electronics_ltd_hkzw_dws01_door_window_sensor','battery_level') }}"
    #   unit_of_measurement: '%'
    moonphases:
      friendly_name: 'Moon Phases'
      value_template: '{{ states.sensor.moon.state }}'
      entity_picture_template: >
        {% if is_state('sensor.moon', 'new_moon') %}
          /local/moonphases/new.jpg
        {% elif is_state('sensor.moon', 'waxing_crescent') %}
          /local/moonphases/waxing_crescent.jpg
        {% elif is_state('sensor.moon', 'first_quarter') %}
          /local/moonphases/first_quarter.jpg
        {% elif is_state('sensor.moon', 'waxing_gibbous') %}
          /local/moonphases/waxing_gibbous.jpg
        {% elif is_state('sensor.moon', 'full_moon') %}
          /local/moonphases/full.jpg
        {% elif is_state('sensor.moon', 'waning_gibbous') %}
          /local/moonphases/waning_gibbous.jpg
        {% elif is_state('sensor.moon', 'last_quarter') %}
          /local/moonphases/last.jpg
        {% elif is_state('sensor.moon', 'waning_crescent') %}
          /local/moonphases/waning_crescent.jpg
        {% endif %}
    # front_yard_fps: 
    #   value_template: '{{ states.sensor.frigate_debug.attributes["front_yard"]["camera_fps"] }}'
    #   unit_of_measurement: 'FPS'
    # front_yard_skipped_fps: 
    #   value_template: '{{ states.sensor.frigate_debug.attributes["front_yard"]["skipped_fps"] }}'
    #   unit_of_measurement: 'FPS'
    # front_yard_detection_fps: 
    #   value_template: '{{ states.sensor.frigate_debug.attributes["front_yard"]["detection_fps"] }}'
    #   unit_of_measurement: 'FPS'
    # frigate_detection_fps: 
    #   value_template: '{{ states.sensor.frigate_debug.attributes["detection_fps"] }}'
    #   unit_of_measurement: 'FPS'

- platform: version
